{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/ErrorBoundry.js","constants.js","containers/App.js","actions.js","reducers.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","id","name","email","className","src","alt","CardList","items","data","map","frnd","i","toString","SearchBox","searchChange","type","placeholder","onChange","ErrorBoundry","props","state","hasError","error","info","this","setState","children","Component","CHANGE_SEARCH_FIELD","REQUEST_DATA_PENDING","REQUEST_DATA_SUCCESS","REQUEST_DATA_FAILED","App","onRequestData","searchValue","onSearchChange","filteredData","filter","d","toLowerCase","includes","React","connect","searchContacts","requestData","isPending","dispatch","event","text","target","value","payload","fetch","responce","json","resdata","catch","initialState","initialStateData","logger","createLogger","rootReducer","combineReducers","action","Object","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2cde9382.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\n\nconst Card = ({id, name, email}) => {\n    return (\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n            <img src={`https://robohash.org/${id}?200x200`} alt='profile image' />\n            <div>\n                <h2>{name}</h2>\n                <p>{email}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Card;","import React from 'react'\nimport Card from './Card'\n\nconst CardList = ({ data }) => {\n    const items = data.map((frnd, i) => {\n        return <Card key={frnd.id.toString()} id={frnd.id} name={frnd.name} email={frnd.email} />\n    });\n    \n    return (\n        <div>\n            {items}\n        </div>\n    );\n};\n\nexport default CardList;","import React from 'react'\n\nconst SearchBox = ({ searchChange }) => {\n    return (\n        <div className='pa2'>\n            <input\n                className='pa3 ba b--green bg-lightest-blue'\n                type=\"search\"\n                placeholder='Search a Friend'\n                onChange={searchChange}\n            />\n        </div>\n    );\n}\n\nexport default SearchBox;\n","import React, { Component } from 'react';\n\nclass ErrorBoundry extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            hasError: false\n        }\n    }\n\n    //Like try catch Block\n    componentDidCatch(error, info) {\n        this.setState({ hasError: true })\n    }\n\n    render() {\n        if (this.state.hasError) {\n            return <h1>An Error has been Occured</h1>\n        }\n        return (this.props.children)\n    }\n}\n\nexport default ErrorBoundry;","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD'\n\nexport const REQUEST_DATA_PENDING = 'REQUEST_DATA_PENDING'\nexport const REQUEST_DATA_SUCCESS = 'REQUEST_DATA_SUCCESS'\nexport const REQUEST_DATA_FAILED = 'REQUEST_DATA_FAILED'","import React from 'react';\nimport { connect } from 'react-redux';\nimport './App.css';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport ErrorBoundry from '../components/ErrorBoundry';\n\nimport { setSearchField , requestData } from '../actions';\n\nconst mapStateToProps = state => {\n  return {\n    searchValue: state.searchContacts.searchValue,\n    data: state.requestData.data,\n    isPending: state.requestData.isPending,\n    error: state.requestData.error\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\n    onRequestData: () => dispatch(requestData())\n  }\n}\n\nclass App extends React.Component {\n\n  componentDidMount() {\n    this.props.onRequestData()\n  }\n\n  render() {\n    const { searchValue, onSearchChange, data } = this.props;\n    const filteredData = data.filter(d => {\n      return d.name.toLowerCase().includes(searchValue.toLowerCase())\n    });\n\n    return (\n      <div className='tc'>\n        <h1>My Friends</h1>\n        <SearchBox searchChange={onSearchChange} />\n        <ErrorBoundry>\n          <CardList data={filteredData} />\n        </ErrorBoundry>\n      </div>\n    )\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import {\n        CHANGE_SEARCH_FIELD,\n        REQUEST_DATA_PENDING,\n        REQUEST_DATA_SUCCESS,\n        REQUEST_DATA_FAILED\n} from './constants';\n\nexport const setSearchField = (text) => ({\n        type: CHANGE_SEARCH_FIELD,\n        payload: text\n})\n\n//applying to redux thunk we can apply functions\nexport const requestData = () => (dispatch) => {\n        dispatch({ type: REQUEST_DATA_PENDING });\n        fetch('https://jsonplaceholder.typicode.com/users')\n                .then(responce => responce.json())\n                .then(resdata => dispatch({ type: REQUEST_DATA_SUCCESS, payload: resdata }))\n                .catch(error => dispatch({ type: REQUEST_DATA_FAILED, payload: error }))\n}","import {\n    CHANGE_SEARCH_FIELD,\n    REQUEST_DATA_PENDING,\n    REQUEST_DATA_SUCCESS,\n    REQUEST_DATA_FAILED\n} from './constants';\n\nconst initialState = {\n    searchValue: ''\n}\n\n//the state of the application and  the action\nexport const searchContacts = (state = initialState, action = {}) => {\n    switch (action.type) {\n        case CHANGE_SEARCH_FIELD:\n            return Object.assign({}, state, { searchValue: action.payload });\n        default:\n            return state;\n    }\n}\n\nconst initialStateData = {\n    data: [],\n    isPending: false,\n    error: ''\n};\n\nexport const requestData = (state = initialStateData, action = {}) => {\n    switch (action.type) {\n        case REQUEST_DATA_PENDING:\n            return {\n                ...state, isPending: true\n            }\n        //Object.assign({}, state, {isPending: true})\n        case REQUEST_DATA_SUCCESS:\n            return {\n                ...state,\n                data: action.payload,\n                isPending: false\n            }\n        //Object.assign({}, state, {data : action.payload, isPending: false})\n        case REQUEST_DATA_FAILED:\n            return {\n                ...state,\n                error: action.payload,\n                isPending: false\n            }\n        //Object.assign({}, state, {error: action.payload, isPending:false})\n        default:\n            return state;\n    }\n\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunkMiddleware from 'redux-thunk';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './containers/App';\nimport { searchContacts , requestData } from './reducers';\nimport 'tachyons';\n\n\nconst logger = createLogger();\nconst rootReducer = combineReducers({ searchContacts , requestData })\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware, logger));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store} >\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}