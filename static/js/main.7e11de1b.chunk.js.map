{"version":3,"sources":["reportWebVitals.js","sampledata.js","Components/Card.js","Components/CardList.js","Components/SearchBox.js","Components/ErrorBoundry.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","friends","id","name","email","Card","className","src","alt","CardList","items","data","map","frnd","i","toString","SearchBox","searchField","searchChange","type","placeholder","onChange","ErrorBoundry","props","state","hasError","error","info","this","setState","children","Component","App","onSearchChange","event","console","log","target","value","searchValue","filteredData","filter","toLowerCase","includes","React","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+LAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,4BCPDQ,G,MAAU,CACnB,CACIC,GAAG,EACHC,KAAM,OACNC,MAAO,mBAEX,CACIF,GAAG,EACHC,KAAM,MACNC,MAAO,eAEX,CACIF,GAAG,EACHC,KAAM,MACNC,MAAO,eAEX,CACIF,GAAG,EACHC,KAAM,QACNC,MAAO,mBCLAC,EAZF,SAAC,GAAuB,IAAtBH,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,MACrB,OACI,sBAAKE,UAAU,sDAAf,UACI,qBAAKC,IAAG,+BAA0BL,EAA1B,YAAwCM,IAAI,kBACpD,gCACI,6BAAKL,IACL,4BAAIC,WCOLK,EAZE,SAAC,GAAc,IACtBC,EADqB,EAAXC,KACGC,KAAI,SAACC,EAAMC,GAC1B,OAAO,cAAC,EAAD,CAA+BZ,GAAIW,EAAKX,GAAIC,KAAMU,EAAKV,KAAMC,MAAOS,EAAKT,OAA9DS,EAAKX,GAAGa,eAG9B,OACI,8BACKL,KCKEM,EAbG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aAC9B,OACI,qBAAKZ,UAAU,MAAf,SACI,uBACIA,UAAU,mCACVa,KAAK,SACLC,YAAY,kBACZC,SAAUH,OCcXI,E,kDApBX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,UAAU,GAHC,E,8DAQDC,EAAOC,GACrBC,KAAKC,SAAS,CAAEJ,UAAU,M,+BAI1B,OAAIG,KAAKJ,MAAMC,SACJ,2DAEHG,KAAKL,MAAMO,a,GAjBAC,aCoCZC,E,kDA9Bb,aAAe,IAAD,8BACZ,gBAOFC,eAAiB,SAACC,GAChBC,QAAQC,IAAIF,EAAMG,OAAOC,OACzB,EAAKT,SAAS,CAAEU,YAAaL,EAAMG,OAAOC,SAR1C,EAAKd,MAAQ,CACXb,KAAMV,EACNsC,YAAa,IAJH,E,qDAaJ,IAAD,OACDC,EAAeZ,KAAKJ,MAAMb,KAAK8B,QAAO,SAAA9B,GAC1C,OAAOA,EAAKR,KAAKuC,cAAcC,SAAS,EAAKnB,MAAMe,YAAYG,kBAGjE,OACE,sBAAKpC,UAAU,KAAf,UACE,4CACA,cAAC,EAAD,CAAWY,aAAcU,KAAKK,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,CAAUtB,KAAM6B,a,GAxBRI,IAAMb,W,MCAxBc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAO1BzD,M","file":"static/js/main.7e11de1b.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const friends = [\n    {\n        id:1,\n        name: 'John',\n        email: 'anemail@test.gr'\n    },\n    {\n        id:2,\n        name: 'Jim',\n        email: 'Jim@test.gr'\n    },\n    {\n        id:3,\n        name: 'Ken',\n        email: 'Ken@test.gr'\n    },\n    {\n        id:4,\n        name: 'Sindy',\n        email: 'Sindy@test.gr'\n    }\n];\n\n","import React from 'react';\n\nconst Card = ({id, name, email}) => {\n    return (\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n            <img src={`https://robohash.org/${id}?200x200`} alt='profile image' />\n            <div>\n                <h2>{name}</h2>\n                <p>{email}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Card;","import React from 'react'\nimport Card from './Card'\n\nconst CardList = ({ data }) => {\n    const items = data.map((frnd, i) => {\n        return <Card key={frnd.id.toString()} id={frnd.id} name={frnd.name} email={frnd.email} />\n    });\n    \n    return (\n        <div>\n            {items}\n        </div>\n    );\n};\n\nexport default CardList;","import React from 'react'\n\nconst SearchBox = ({ searchField, searchChange }) => {\n    return (\n        <div className='pa2'>\n            <input\n                className='pa3 ba b--green bg-lightest-blue'\n                type=\"search\"\n                placeholder='Search a Friend'\n                onChange={searchChange}\n            />\n        </div>\n    );\n}\n\nexport default SearchBox;\n","import React, { Component } from 'react';\n\nclass ErrorBoundry extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            hasError: false\n        }\n    }\n\n    //Like try catch Block\n    componentDidCatch(error, info) {\n        this.setState({ hasError: true })\n    }\n\n    render() {\n        if (this.state.hasError) {\n            return <h1>An Error has been Occured</h1>\n        }\n        return (this.props.children)\n    }\n}\n\nexport default ErrorBoundry;","import React from 'react';\nimport './App.css';\nimport { friends } from './sampledata';\nimport CardList from './Components/CardList';\nimport SearchBox from './Components/SearchBox';\nimport ErrorBoundry from './Components/ErrorBoundry';\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      data: friends,\n      searchValue: ''\n    }\n  }\n\n  onSearchChange = (event) => {\n    console.log(event.target.value);\n    this.setState({ searchValue: event.target.value })\n  }\n\n  render() {\n    const filteredData = this.state.data.filter(data => {\n      return data.name.toLowerCase().includes(this.state.searchValue.toLowerCase())\n    });\n\n    return (\n      <div className='tc'>\n        <h1>My Friends</h1>\n        <SearchBox searchChange={this.onSearchChange} />\n        <ErrorBoundry>\n          <CardList data={filteredData} />\n        </ErrorBoundry>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './App'\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}